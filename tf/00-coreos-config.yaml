#cloud-config

coreos:
  update:
    reboot-strategy: etcd-lock
  etcd2:
    #initial cluster configuration
    initial-advertise-peer-urls: https://$public_ipv4:2380
    listen-peer-urls: https://$public_ipv4:2380
    listen-client-urls: https://$public_ipv4:2379
    advertise-client-urls: https://$public_ipv4:2379
    initial-advertise-client-urls: https://$public_ipv4:2379
    initial-cluster-state: new
    #security
    trusted-ca-file: /home/core/ca.pem
    cert-file: /home/core/etcd.pem
    key-file: /home/core/etcd-key.pem
    client-cert-auth: 1
    peer-trusted-ca-file: /home/core/ca.pem
    peer-cert-file: /home/core/etcd.pem
    peer-key-file: /home/core/etcd-key.pem
    peer-client-cert-auth: 1
    #tuning see https://github.com/coreos/etcd/blob/master/Documentation/tuning.md
    heartbeat-interval: 300
    election-timeout: 2500
  fleet:
    public-ip: $public_ipv4   # used for fleetctl ssh command
    etcd-endpoints: https://$public_ipv4:2379
  locksmith:
    endpoint: https://$public_ipv4:2379
    etcd-cafile: /home/core/ca.pem
    etcd-certfile: /home/core/client.pem
    etcd-keyfile: /home/core/client-key.pem
  units:
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
write_files:
  - path: /run/systemd/resolved.conf.d/99-search.conf
    permissions: "0644"
    owner: "root"
    content: |
      [Resolve]
      Domains=k8s.xobs.io
  - path: /run/systemd/system/fleet.service.d/30-certificates.conf
    permissions: 0644
    content: |
      [Service]
      # client auth certs
      Environment=ETCD_CAFILE=/home/core/ca.pem
      Environment=ETCD_CERTFILE=/home/core/etcd.pem
      Environment=ETCD_KEYFILE=/home/core/etcd-key.pem
  - path: "/etc/flannel/options.env"
    permissions: "0755"
    content: |
        FLANNELD_IFACE=$public_ipv4
        FLANNELD_ETCD_ENDPOINTS=https://$public_ipv4:2379
        FLANNELD_ETCD_CAFILE=/etc/ssl/etcd/ca.pem
        FLANNELD_ETCD_CERTFILE=/etc/ssl/etcd/client.pem
        FLANNELD_ETCD_KEYFILE=/etc/ssl/etcd/client-key.pem
  - path: "/etc/systemd/system/flanneld.service.d/40-ExecStartPre-symlink.conf"
    permissions: "0644"
    content: |
        [Service]
        ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
  - path: "/etc/systemd/system/docker.service.d/40-flannel.conf"
    permissions: "0644"
    content: |
        [Unit]
        Requires=flanneld.service
        After=flanneld.service
  - path: "/etc/systemd/system/extraswap.service"
    permissions: "0644"
    content: |
      [Unit]
      Description=Turn on swap

      [Service]
      Type=oneshot
      ExecStart=/sbin/swapon /swap
      RemainAfterExit=true

      [Install]
      WantedBy=multi-user.target
  - path: "/etc/systemd/system/kubelet.service"
    permissions: "0644"
    content: |
        [Service]
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers

        Environment=KUBELET_VERSION=v1.3.6_coreos.0
        Environment="RKT_OPTS=--volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume dns,kind=host,source=/etc/resolv.conf \
          --mount volume=dns,target=/etc/resolv.conf"

        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --api-servers=http://127.0.0.1:8080 \
          --network-plugin-dir=/etc/kubernetes/cni/net.d \
          --register-schedulable=false \
          --allow-privileged=true \
          --config=/etc/kubernetes/manifests \
          --hostname-override=$public_ipv4 \
          --cluster-dns=10.3.0.10 \
          --cluster-domain=cluster.local
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
  - path: "/etc/kubernetes/manifests/kube-apiserver.yaml"
    permissions: "0755"
    content: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: kube-apiserver
          namespace: kube-system
        spec:
          hostNetwork: true
          containers:
          - name: kube-apiserver
            image: quay.io/coreos/hyperkube:v1.3.6_coreos.0
            command:
            - /hyperkube
            - apiserver
            - --bind-address=0.0.0.0
            - --etcd-servers=https://$public_ipv4:2379
            - --etcd-cafile=/etc/kubernetes/ssl/ca.pem
            - --etcd-certfile=/etc/kubernetes/ssl/etcd.pem
            - --etcd-keyfile=/etc/kubernetes/ssl/etcd-key.pem
            - --allow-privileged=true
            - --service-cluster-ip-range=10.3.0.0/24
            - --secure-port=443
            - --advertise-address=$public_ipv4
            - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota
            - --tls-cert-file=/etc/kubernetes/ssl/etcd.pem
            - --tls-private-key-file=/etc/kubernetes/ssl/etcd-key.pem
            - --client-ca-file=/etc/kubernetes/ssl/ca.pem
            - --token-auth-file=/etc/kubernetes/ssl/known_tokens.csv
            - --service-account-key-file=/etc/kubernetes/ssl/etcd-key.pem
            - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/networkpolicies=true
            ports:
            - containerPort: 443
              hostPort: 443
              name: https
            - containerPort: 8080
              hostPort: 8080
              name: local
            volumeMounts:
            - mountPath: /etc/kubernetes/ssl
              name: ssl-certs-kubernetes
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/ssl
            name: ssl-certs-kubernetes
          - hostPath:
              path: /usr/share/ca-certificates
            name: ssl-certs-host
  - path: "/etc/kubernetes/manifests/kube-proxy.yaml"
    permissions: "0755"
    content: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: kube-proxy
          namespace: kube-system
        spec:
          hostNetwork: true
          containers:
          - name: kube-proxy
            image: quay.io/coreos/hyperkube:v1.3.6_coreos.0
            command:
            - /hyperkube
            - proxy
            - --master=http://127.0.0.1:8080
            - --proxy-mode=iptables
            securityContext:
              privileged: true
            volumeMounts:
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true
          volumes:
          - hostPath:
              path: /usr/share/ca-certificates
            name: ssl-certs-host
  - path: "/etc/kubernetes/manifests/kube-controller-manager.yaml"
    permissions: "0755"
    content: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: kube-controller-manager
          namespace: kube-system
        spec:
          hostNetwork: true
          containers:
          - name: kube-controller-manager
            image: quay.io/coreos/hyperkube:v1.3.6_coreos.0
            command:
            - /hyperkube
            - controller-manager
            - --master=http://127.0.0.1:8080
            - --leader-elect=true
            - --service-account-private-key-file=/etc/kubernetes/ssl/etcd-key.pem
            - --root-ca-file=/etc/kubernetes/ssl/ca.pem
            livenessProbe:
              httpGet:
                host: 127.0.0.1
                path: /healthz
                port: 10252
              initialDelaySeconds: 15
              timeoutSeconds: 1
            volumeMounts:
            - mountPath: /etc/kubernetes/ssl
              name: ssl-certs-kubernetes
              readOnly: true
            - mountPath: /etc/ssl/certs
              name: ssl-certs-host
              readOnly: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/ssl
            name: ssl-certs-kubernetes
          - hostPath:
              path: /usr/share/ca-certificates
            name: ssl-certs-host
  - path: "/etc/kubernetes/manifests/kube-scheduler.yaml"
    permissions: "0755"
    content: |
        apiVersion: v1
        kind: Pod
        metadata:
          name: kube-scheduler
          namespace: kube-system
        spec:
          hostNetwork: true
          containers:
          - name: kube-scheduler
            image: quay.io/coreos/hyperkube:v1.3.6_coreos.0
            command:
            - /hyperkube
            - scheduler
            - --master=http://127.0.0.1:8080
            - --leader-elect=true
            livenessProbe:
              httpGet:
                host: 127.0.0.1
                path: /healthz
                port: 10251
              initialDelaySeconds: 15
              timeoutSeconds: 1
  - path: "/etc/kubernetes/worker-kubeconfig.yaml"
    permissions: "0755"
    content: |
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            certificate-authority: /etc/kubernetes/ssl/ca.pem
        users:
        - name: kubelet
          user:
            client-certificate: /etc/kubernetes/ssl/etcd.pem
            client-key: /etc/kubernetes/ssl/etcd-key.pem
        contexts:
        - context:
            cluster: local
            user: kubelet
          name: kubelet-context
        current-context: kubelet-context
